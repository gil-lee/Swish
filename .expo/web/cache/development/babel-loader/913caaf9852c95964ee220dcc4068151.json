{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final project\\\\Swish\\\\SignUp\\\\SignUpPage.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeForms from \"native-forms\";\nimport { Input, Label } from 'react-native-elements';\nimport DatePicker from 'react-native-datepicker';\n\nvar SignUpPage = function (_Component) {\n  _inherits(SignUpPage, _Component);\n\n  var _super = _createSuper(SignUpPage);\n\n  function SignUpPage(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      date: \"2021-03-02\"\n    };\n    return _this;\n  }\n\n  _createClass(SignUpPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, React.createElement(Input, {\n        label: \"\\u05E9\\u05DD \\u05E4\\u05E8\\u05D8\\u05D9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        label: \"\\u05E9\\u05DD \\u05DE\\u05E9\\u05E4\\u05D7\\u05D4\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, React.createElement(DatePicker, {\n        style: {\n          width: 200\n        },\n        label: \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA \\u05DC\\u05D9\\u05D3\\u05D4\",\n        date: this.state.date,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"YYYY-MM-DD\",\n        minDate: \"2016-05-01\",\n        maxDate: \"2016-06-01\",\n        confirmBtnText: \"Confirm\",\n        cancelBtnText: \"Cancel\",\n        customStyles: {\n          dateIcon: {\n            position: 'absolute',\n            left: 0,\n            top: 4,\n            marginLeft: 0\n          },\n          dateInput: {\n            marginLeft: 36\n          }\n        },\n        onDateChange: function onDateChange(date) {\n          _this2.setState({\n            date: date\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: \"example@email.com\",\n        label: \"\\u05D0\\u05D9\\u05DE\\u05D9\\u05D9\\u05DC\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: \"example@email.com\",\n        label: \"\\u05D0\\u05D9\\u05DE\\u05D5\\u05EA \\u05D0\\u05D9\\u05DE\\u05D9\\u05D9\\u05DC\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        label: \"\\u05E1\\u05D9\\u05E1\\u05DE\\u05D4\",\n        textContentType: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        label: \"\\u05D0\\u05D9\\u05DE\\u05D5\\u05EA \\u05E1\\u05D9\\u05E1\\u05DE\\u05D4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return SignUpPage;\n}(Component);\n\nexport { SignUpPage as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/final project/Swish/SignUp/SignUpPage.jsx"],"names":["React","Component","useState","NativeForms","Input","Label","DatePicker","SignUpPage","props","state","date","styles","container","color","width","dateIcon","position","left","top","marginLeft","dateInput","setState","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\r\n\r\nimport { Button, StyleSheet, Text, View } from \"react-native\";\r\nimport NativeForms from \"native-forms\";\r\nimport { Input, Label } from 'react-native-elements';\r\nimport DatePicker from 'react-native-datepicker'\r\n\r\nexport default class SignUpPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: \"2021-03-02\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n\r\n                <View>\r\n                    <Input\r\n                        // placeholder='BASIC INPUT'\r\n                        label=\"שם פרטי\"\r\n                    />\r\n                    <Input\r\n                        // placeholder='BASIC INPUT'\r\n                        label=\"שם משפחה\"\r\n                        style={{ color: 'red' }}\r\n                    />\r\n                </View>\r\n                <View>\r\n                  \r\n                    <DatePicker\r\n                        style={{ width: 200 }}\r\n                        label=\"תאריך לידה\"\r\n                        date={this.state.date}\r\n                        mode=\"date\"\r\n                        placeholder=\"select date\"\r\n                        format=\"YYYY-MM-DD\"\r\n                        minDate=\"2016-05-01\"\r\n                        maxDate=\"2016-06-01\"\r\n                        confirmBtnText=\"Confirm\"\r\n                        cancelBtnText=\"Cancel\"\r\n                        customStyles={{\r\n                            dateIcon: {\r\n                                position: 'absolute',\r\n                                left: 0,\r\n                                top: 4,\r\n                                marginLeft: 0\r\n                            },\r\n                            dateInput: {\r\n                                marginLeft: 36\r\n                            }\r\n                            // ... You can check the source to find the other keys.\r\n                        }}\r\n                        onDateChange={(date) => { this.setState({ date: date }) }}\r\n                    />\r\n                    <Input\r\n                        placeholder='example@email.com'\r\n                        label=\"אימייל\"\r\n                    />\r\n                    <Input\r\n                        placeholder='example@email.com'\r\n                        label=\"אימות אימייל\"\r\n                    />\r\n                    <Input\r\n                        // placeholder='BASIC INPUT'\r\n                        label=\"סיסמה\"\r\n                        textContentType=\"password\"\r\n                    />\r\n                    <Input\r\n                        // placeholder='BASIC INPUT'\r\n                        label=\"אימות סיסמה\"\r\n                    />\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}